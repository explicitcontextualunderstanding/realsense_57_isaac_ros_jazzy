#---
# name: realsense_ros
# group: hardware
# depends: [cuda, python, cmake, ros2]
# test: test.pycd 
# notes:
#   - Builds librealsense from source (pin with LIBREALSENSE_VERSION)
#   - Builds NVIDIA-ISAAC-ROS `realsense-ros` in the same container (REALSENSE_ROS_BRANCH)
#   - Host is expected to manage kernel modules (e.g., JetsonHacks prebuilt modules for JetPack 6 / kernel 5.15.148-tegra)
#
# Inline references (URLs & latest-known versions):
#   - Jetson Container examples: https://github.com/dustynv/jetson-containers/tree/master/packages/robots/isaac-ros
#   - Intel RealSense ROS driver (realsense-ros): https://github.com/IntelRealSense/realsense-ros  (latest 4.57.2)
#   - NVIDIA Isaac ROS common: https://github.com/NVIDIA-ISAAC-ROS/isaac_ros_common   (latest release 3.2 update 11)
#   - Intel librealsense (RealSenseâ„¢ SDK 2.0 beta): https://github.com/IntelRealSense/librealsense  (v2.57.2)
#   - JetsonHacks jetson-orin-librealsense: https://github.com/jetsonhacks/jetson-orin-librealsense
#---
ARG BASE_IMAGE=dustynv/ros:jazzy-ros-base-r36.4.0-cu128-24.04
FROM ${BASE_IMAGE}

LABEL maintainer="you@example.com" \
      org.opencontainers.image.title="realsense_ros" \
      org.opencontainers.image.source="https://github.com/NVIDIA-ISAAC-ROS/realsense-ros" \
      com.realsense.librealsense.version="v2.55.1 (default, overridable via LIBREALSENSE_VERSION)" \
      com.realsense.realsense_ros.best_known_release="release/4.51.1-isaac (compatible with Isaac ROS)" \
      com.realsense.references="realsense-ros@4.57.2 | isaac_ros_common@3.2 | librealsense@v2.57.2"

ARG LIBREALSENSE_VERSION=v2.55.1
ARG REALSENSE_ROS_BRANCH=release/4.51.1-isaac
ARG INSTALL_PYREALSENSE2=false
ARG UID=1000
ARG GID=1000

ENV DEBIAN_FRONTEND=noninteractive

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# Fix expired ROS 2 apt key and add repository
RUN set -eux; \
    apt-get update && apt-get install -y curl gnupg2 lsb-release; \
    rm -f /etc/apt/trusted.gpg.d/ros-archive-keyring.gpg /etc/apt/trusted.gpg.d/ros-archive-key.gpg /usr/share/keyrings/ros-archive-keyring.gpg || true; \
    curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg; \
    echo "deb [arch=arm64 signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" > /etc/apt/sources.list.d/ros2.list; \
    apt-get update

# Fix broken deps first, then install packages in two steps to avoid dpkg errors
RUN set -eux; \
    apt-get install -f -y; \
    apt-get install -y --no-install-recommends \
        build-essential cmake git wget curl \
        libssl-dev libusb-1.0-0-dev libgtk-3-dev libglfw3-dev libgl1-mesa-dev libglu1-mesa-dev \
        libx11-dev libxrandr-dev libxi-dev libxcursor-dev libxinerama-dev \
        udev python3-pip python3-dev python3-colcon-common-extensions python3-rosdep python3-argcomplete \
        iputils-ping net-tools; \
    apt-get install -y --no-install-recommends \
        ros-jazzy-rqt ros-jazzy-rqt-common-plugins \
        ros-jazzy-rclcpp ros-jazzy-rclpy ros-jazzy-sensor-msgs ros-jazzy-cv-bridge ros-jazzy-tf2-ros \
        ros-jazzy-image-transport ros-jazzy-camera-info-manager ros-jazzy-compressed-image-transport; \
    rm -rf /var/lib/apt/lists/*; apt-get clean

# Initialize rosdep
RUN set -eux; \
    if [ ! -f /etc/ros/rosdep/sources.list.d/20-default.list ]; then \
        rosdep init || true; \
    fi; \
    rosdep update

# Build librealsense from source
RUN set -eux; \
    git clone --branch ${LIBREALSENSE_VERSION} --depth=1 https://github.com/IntelRealSense/librealsense.git /tmp/librealsense

WORKDIR /tmp/librealsense
RUN set -eux; \
    mkdir -p build && cd build && \
    cmake .. \
        -DBUILD_EXAMPLES=ON \
        -DFORCE_RSUSB_BACKEND=ON \
        -DBUILD_WITH_CUDA=ON \
        -DCMAKE_BUILD_TYPE=Release \
        -DBUILD_PYTHON_BINDINGS=ON \
        -DPYTHON_EXECUTABLE=/usr/bin/python3 \
        -DPYTHON_INSTALL_DIR=$(python3 -c 'import sys; print(f"/usr/lib/python{sys.version_info.major}.{sys.version_info.minor}/dist-packages")')

WORKDIR /tmp/librealsense/build
RUN set -eux; \
    make -j$(nproc)

RUN set -eux; \
    make install; \
    cp /tmp/librealsense/config/99-realsense-libusb.rules /etc/udev/rules.d/ || true; \
    rm -rf /tmp/librealsense

ENV PATH="/usr/local/bin:${PATH}"

# Optionally install pyrealsense2 wheel package
RUN set -eux; \
    if [ "${INSTALL_PYREALSENSE2}" = "true" ]; then pip3 install --no-cache-dir pyrealsense2; fi

# Verify pyrealsense2 import (non-fatal)
RUN python3 - <<'EOF' || true
try:
    import pyrealsense2 as rs
    print("pyrealsense2 import OK:", getattr(rs, '__version__', 'unknown'))
except Exception as e:
    print("pyrealsense2 import failed (expected on some Jetson builds without wheel):", e)
EOF

# Create non-root user
RUN set -eux; \
    groupadd -g ${GID} user || true; \
    id -u user >/dev/null 2>&1 || useradd -m -u ${UID} -g ${GID} -s /bin/bash user

# Setup ROS workspace folders and permissions
RUN set -eux; mkdir -p /home/user/ros_ws/src; chown -R user:user /home/user/ros_ws
WORKDIR /home/user/ros_ws/src

# Clone realsense-ros source at pinned branch
RUN set -eux; \
    git clone --branch ${REALSENSE_ROS_BRANCH} https://github.com/NVIDIA-ISAAC-ROS/realsense-ros.git

WORKDIR /home/user/ros_ws
RUN set -eux; rosdep install --from-paths src --ignore-src -r -y
RUN set -eux; chown -R user:user /home/user/ros_ws

USER user
ENV HOME=/home/user

WORKDIR /home/user/ros_ws
RUN set -eux; . /opt/ros/jazzy/setup.sh; colcon build --symlink-install

ENTRYPOINT ["/bin/bash", "-c", "source /home/user/ros_ws/install/setup.bash && exec bash"]

# Note: Kernel modules for librealsense must be installed on the host system.

